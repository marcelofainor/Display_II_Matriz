#ifndef FONT_H
#define FONT_H

#include <stdint.h>

// Definições do tamanho da fonte
#define FONT_HEIGHT 8
#define FONT_WIDTH 8

// Offset para cada tipo de caractere no array
#define FONT_OFFSET_SPACE 0
#define FONT_OFFSET_NUMBERS 1  // 0-9
#define FONT_OFFSET_UPPERCASE 11 // A-Z
#define FONT_OFFSET_LOWERCASE 37 // a-z

// Array de fontes 8x8
static const uint8_t font[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // Nothing
0x3e, 0x41, 0x41, 0x49, 0x41, 0x41, 0x3e, 0x00, //0
0x00, 0x00, 0x42, 0x7f, 0x40, 0x00, 0x00, 0x00, //1
0x30, 0x49, 0x49, 0x49, 0x49, 0x46, 0x00, 0x00, //2
0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x36, 0x00, //3
0x3f, 0x20, 0x20, 0x78, 0x20, 0x20, 0x00, 0x00, //4
0x4f, 0x49, 0x49, 0x49, 0x49, 0x30, 0x00, 0x00, //5
0x3f, 0x48, 0x48, 0x48, 0x48, 0x48, 0x30, 0x00, //6
0x01, 0x01, 0x01, 0x61, 0x31, 0x0d, 0x03, 0x00, //7
0x36, 0x49, 0x49, 0x49, 0x49, 0x49, 0x36, 0x00, //8
0x06, 0x09, 0x09, 0x09, 0x09, 0x09, 0x7f, 0x00, //9
0x78, 0x14, 0x12, 0x11, 0x12, 0x14, 0x78, 0x00, //A
0x7f, 0x49, 0x49, 0x49, 0x49, 0x49, 0x7f, 0x00, //B
0x7e, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x00, //C
0x7f, 0x41, 0x41, 0x41, 0x41, 0x41, 0x7e, 0x00, //D
0x7f, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x00, //E
0x7f, 0x09, 0x09, 0x09, 0x09, 0x01, 0x01, 0x00, //F
0x7f, 0x41, 0x41, 0x41, 0x51, 0x51, 0x73, 0x00, //G
0x7f, 0x08, 0x08, 0x08, 0x08, 0x08, 0x7f, 0x00, //H
0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, //I
0x21, 0x41, 0x41, 0x3f, 0x01, 0x01, 0x01, 0x00, //J
0x00, 0x7f, 0x08, 0x08, 0x14, 0x22, 0x41, 0x00, //K
0x7f, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x00, //L
0x7f, 0x02, 0x04, 0x08, 0x04, 0x02, 0x7f, 0x00, //M
0x7f, 0x02, 0x04, 0x08, 0x10, 0x20, 0x7f, 0x00, //N
0x3e, 0x41, 0x41, 0x41, 0x41, 0x41, 0x3e, 0x00, //O
0x7f, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0e, 0x00, //P
0x3e, 0x41, 0x41, 0x49, 0x51, 0x61, 0x7e, 0x00, //Q
0x7f, 0x11, 0x11, 0x11, 0x31, 0x51, 0x0e, 0x00, //R
0x46, 0x49, 0x49, 0x49, 0x49, 0x30, 0x00, 0x00, //S
0x01, 0x01, 0x01, 0x7f, 0x01, 0x01, 0x01, 0x00, //T
0x3f, 0x40, 0x40, 0x40, 0x40, 0x40, 0x3f, 0x00, //U
0x0f, 0x10, 0x20, 0x40, 0x20, 0x10, 0x0f, 0x00, //V
0x7f, 0x20, 0x10, 0x08, 0x10, 0x20, 0x7f, 0x00, //W
0x00, 0x41, 0x22, 0x14, 0x14, 0x22, 0x41, 0x00, //X
0x01, 0x02, 0x04, 0x78, 0x04, 0x02, 0x01, 0x00, //Y
0x41, 0x61, 0x59, 0x45, 0x43, 0x41, 0x00, 0x00, //Z
0x20, 0x54, 0x54, 0x54, 0x78, 0x00, 0x00, 0x00, //a
0x7F, 0x48, 0x44, 0x44, 0x38, 0x00, 0x00, 0x00, //b
0x38, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, //c
0x38, 0x44, 0x44, 0x48, 0x7F, 0x00, 0x00, 0x00, //d
0x38, 0x54, 0x54, 0x54, 0x58, 0x00, 0x00, 0x00, //e
0x00, 0x08, 0x7E, 0x09, 0x02, 0x00, 0x00, 0x00, //f
0x18, 0xA4, 0xA4, 0xA4, 0x7C, 0x00, 0x00, 0x00, //g
0x7F, 0x08, 0x04, 0x04, 0x78, 0x00, 0x00, 0x00, //h
0x00, 0x44, 0x7D, 0x40, 0x00, 0x00, 0x00, 0x00, //i
0x40, 0x80, 0x84, 0x7D, 0x00, 0x00, 0x00, 0x00, //j
0x7F, 0x10, 0x28, 0x44, 0x00, 0x00, 0x00, 0x00, //k
0x00, 0x41, 0x7F, 0x40, 0x00, 0x00, 0x00, 0x00, //l
0x7C, 0x04, 0x18, 0x04, 0x78, 0x00, 0x00, 0x00, //m
0x7C, 0x08, 0x04, 0x04, 0x78, 0x00, 0x00, 0x00, //n
0x38, 0x44, 0x44, 0x44, 0x38, 0x00, 0x00, 0x00, //o
0x7C, 0x14, 0x14, 0x14, 0x08, 0x00, 0x00, 0x00, //p
0x08, 0x14, 0x14, 0x18, 0x7C, 0x00, 0x00, 0x00, //q
0x7C, 0x08, 0x04, 0x04, 0x08, 0x00, 0x00, 0x00, //r
0x48, 0x54, 0x54, 0x54, 0x20, 0x00, 0x00, 0x00, //s
0x04, 0x3F, 0x44, 0x40, 0x20, 0x00, 0x00, 0x00, //t
0x3C, 0x40, 0x40, 0x20, 0x7C, 0x00, 0x00, 0x00, //u
0x1C, 0x20, 0x40, 0x20, 0x1C, 0x00, 0x00, 0x00, //v
0x3C, 0x40, 0x30, 0x40, 0x3C, 0x00, 0x00, 0x00, //w
0x44, 0x28, 0x10, 0x28, 0x44, 0x00, 0x00, 0x00, //x
0x0C, 0x50, 0x50, 0x50, 0x3C, 0x00, 0x00, 0x00, //y
0x44, 0x64, 0x54, 0x4C, 0x44, 0x00, 0x00, 0x00, //z

};

// Funções auxiliares para acessar os caracteres
static inline uint8_t* get_char_data(char c) {
    int index = 0;
    
    if (c == ' ') {
        index = 0;
    }
    else if (c >= '0' && c <= '9') {
        index = FONT_OFFSET_NUMBERS + (c - '0');
    }
    else if (c >= 'A' && c <= 'Z') {
        index = FONT_OFFSET_UPPERCASE + (c - 'A');
    }
    else if (c >= 'a' && c <= 'z') {
        index = FONT_OFFSET_LOWERCASE + (c - 'a');
    }
    
    return (uint8_t*)&font[index * FONT_HEIGHT];
}

#endif // FONT_H
